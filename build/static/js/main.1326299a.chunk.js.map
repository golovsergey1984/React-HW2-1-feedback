{"version":3,"sources":["components/Feedback/Feedback.module.css","components/Feedback/Statistics.js","components/Feedback/Buttons.js","components/Feedback/Section.js","components/Feedback/Notification.js","components/Feedback/Feedback.js","components/App.js","index.js"],"names":["module","exports","Statistic","good","neutral","bad","total","percentage","isOpen","shortId","className","styles","boild","Buttons","onLeaveFeedback","type","name","buttonGood","button","onClick","buttonNeutral","buttonBad","Section","props","title","Notification","msg","message","Feedback","state","statisticDataId","shortid","generate","e","target","setState","prevState","step","Math","round","this","Statistics","Component","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,IAAM,sBAAsB,WAAa,6BAA6B,cAAgB,gCAAgC,UAAY,4BAA4B,OAAS,yBAAyB,MAAQ,0B,2LCyB3OC,EAtBG,SAAC,GAAD,IAChBC,EADgB,EAChBA,KACAC,EAFgB,EAEhBA,QACAC,EAHgB,EAGhBA,IACAC,EAJgB,EAIhBA,MACAC,EALgB,EAKhBA,WACAC,EANgB,EAMhBA,OANgB,EAOhBC,QAPgB,OAShBD,EACE,kBAAC,WAAD,KACE,4BACE,qCAAWL,GACX,wCAAcC,GACd,qCAAWC,GACX,wBAAIK,UAAWC,IAAOC,OAAtB,UAAqCN,GACrC,wBAAII,UAAWC,IAAOC,OAAtB,sBAAiDL,KAIrD,ICQWM,EA5BC,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACd,kBAAC,WAAD,KACE,4BACEC,KAAK,SACLC,KAAK,OACLN,UAAWC,IAAOM,WAAa,IAAMN,IAAOO,OAC5CC,QAASL,GAJX,QAQA,4BACEC,KAAK,SACLC,KAAK,UACLN,UAAWC,IAAOS,cAAgB,IAAMT,IAAOO,OAC/CC,QAASL,GAJX,WAQA,4BACEC,KAAK,SACLC,KAAK,MACLN,UAAWC,IAAOU,UAAY,IAAMV,IAAOO,OAC3CC,QAASL,GAJX,SCjBWQ,EADC,SAAAC,GAAK,OAAI,uBAAGb,UAAWC,IAAOa,OAAQD,EAAMC,QCO7CC,EAPM,SAAAF,GAAK,OACvBA,EAAMf,QACL,6BACE,uBAAGE,UAAWC,IAAOa,MAAQ,IAAMb,IAAOe,KAAMH,EAAMI,WCCvCC,E,2MAKnBC,MAAQ,CACN1B,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,WAAY,IACZC,QAAQ,G,EAGVsB,gBAAkBC,IAAQC,W,EAE1BlB,gBAAkB,SAAAmB,GAChB,IAAMjB,EAAOiB,EAAEC,OAAOlB,KAEtB,EAAKmB,UAAS,SAACC,EAAWb,GAAZ,gCACXP,EAAOoB,EAAUpB,GAAQO,EAAMc,MADpB,sBAELD,EAAU9B,MAAQiB,EAAMc,MAFnB,wBAGJ,GAHI,KAMd,EAAKF,UAAS,SAACC,EAAWb,GAAZ,MAAuB,CACnChB,WAAY+B,KAAKC,MAAOH,EAAUjC,KAAOiC,EAAU9B,MAAS,KAAO,S,wEAKrE,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAASkB,MAAM,+BACf,kBAAC,EAAD,CAAiBV,gBAAiB0B,KAAK1B,kBAEvC,kBAAC,EAAD,CAASU,MAAM,eACf,kBAACiB,EAAD,CACEtC,KAAMqC,KAAKX,MAAM1B,KACjBC,QAASoC,KAAKX,MAAMzB,QACpBC,IAAKmC,KAAKX,MAAMxB,IAChBC,MAAOkC,KAAKX,MAAMvB,MAClBC,WAAYiC,KAAKX,MAAMtB,WACvBC,OAAQgC,KAAKX,MAAMrB,OACnBC,QAAS+B,KAAKV,kBAEhB,kBAAC,EAAD,CAAcH,QAAQ,oBAAoBnB,OAAQgC,KAAKX,MAAMrB,c,GA9C/BkC,aAAjBd,EACZe,aAAe,CACpBN,KAAM,GCPV,IAMeO,EANH,kBACV,6BACE,kBAAC,EAAD,QCAJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1326299a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Feedback_title__2xcBa\",\"msg\":\"Feedback_msg__2--uT\",\"buttonGood\":\"Feedback_buttonGood__2xr7G\",\"buttonNeutral\":\"Feedback_buttonNeutral__2y0pq\",\"buttonBad\":\"Feedback_buttonBad__Qt2oG\",\"button\":\"Feedback_button__10FTQ\",\"boild\":\"Feedback_boild__aag9B\"};","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Feedback.module.css\";\r\n\r\nconst Statistic = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  percentage,\r\n  isOpen,\r\n  shortId\r\n}) =>\r\n  isOpen ? (\r\n    <Fragment>\r\n      <ul>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li> Bad: {bad}</li>\r\n        <li className={styles.boild}>Total: {total}</li>\r\n        <li className={styles.boild}>Positive feedback: {percentage}</li>\r\n      </ul>\r\n    </Fragment>\r\n  ) : (\r\n    \"\"\r\n  );\r\nexport default Statistic;\r\n\r\nStatistic.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  percentage: PropTypes.string.isRequired,\r\n  isOpen: PropTypes.bool.isRequired\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Feedback.module.css\";\r\n\r\nconst Buttons = ({ onLeaveFeedback }) => (\r\n  <Fragment>\r\n    <button\r\n      type=\"button\"\r\n      name=\"good\"\r\n      className={styles.buttonGood + \" \" + styles.button}\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      Good\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      name=\"neutral\"\r\n      className={styles.buttonNeutral + \" \" + styles.button}\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      Neutral\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      name=\"bad\"\r\n      className={styles.buttonBad + \" \" + styles.button}\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      Bad\r\n    </button>\r\n  </Fragment>\r\n);\r\nexport default Buttons;\r\n\r\nButtons.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Feedback.module.css\";\r\n\r\nconst Section = props => <p className={styles.title}>{props.title}</p>;\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Feedback.module.css\";\r\n\r\nconst Notification = props =>\r\n  !props.isOpen && (\r\n    <div>\r\n      <p className={styles.title + \" \" + styles.msg}>{props.message}</p>\r\n    </div>\r\n  );\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n  isOpen: PropTypes.bool.isRequired\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport shortid from \"shortid\";\r\nimport Statistics from \"./Statistics.js\";\r\nimport FeedbackOptions from \"./Buttons.js\";\r\nimport Section from \"./Section.js\";\r\nimport Notification from \"./Notification.js\";\r\n\r\nexport default class Feedback extends Component {\r\n  static defaultProps = {\r\n    step: 1\r\n  };\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    percentage: \"0\",\r\n    isOpen: false\r\n  };\r\n\r\n  statisticDataId = shortid.generate();\r\n\r\n  onLeaveFeedback = e => {\r\n    const name = e.target.name;\r\n\r\n    this.setState((prevState, props) => ({\r\n      [name]: prevState[name] + props.step,\r\n      total: prevState.total + props.step,\r\n      isOpen: true\r\n    }));\r\n\r\n    this.setState((prevState, props) => ({\r\n      percentage: Math.round((prevState.good / prevState.total) * 100) + \"%\"\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Section title=\"Please Leave your feedback\" />\r\n        <FeedbackOptions onLeaveFeedback={this.onLeaveFeedback} />\r\n\r\n        <Section title=\"Statistics\" />\r\n        <Statistics\r\n          good={this.state.good}\r\n          neutral={this.state.neutral}\r\n          bad={this.state.bad}\r\n          total={this.state.total}\r\n          percentage={this.state.percentage}\r\n          isOpen={this.state.isOpen}\r\n          shortId={this.statisticDataId}\r\n        />\r\n        <Notification message=\"No feedback given\" isOpen={this.state.isOpen} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nFeedback.propTypes = {\r\n  step: PropTypes.number.isRequired\r\n};\r\n","import React from \"react\";\r\nimport Feedback from \"./Feedback/Feedback.js\";\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Feedback />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}